@using HSMServer.Extensions
@using HSMServer.Core.Model.Authentication

@model HSMServer.Model.TreeViewModels.TreeNodeStateViewModel

@{
    var data = Model.Data;
    var isEmptyProduct = data.AllSensorsCount == 0;

    var userNotifications = (User as User).Notifications;
}


<li id='@data.EncodedId' title='@data.Tooltip' data-jstree='{"title" : "@data.Title", "icon" : "@data.Status", "time" : "@data.UpdateTime"}'>
    <span>@Html.Raw(data.Name.GetShortNodeName()) </span>

    @if (Model.Nodes != null)
        @foreach (var child in Model.Nodes)
        {
            <ul>@await Html.PartialAsync("_TreeNode", child)</ul>
        }
    
    @if ((Model.Sensors?.Count ?? 0) > 0)
    {
        <ul>
            @foreach (var sensor in Model.Sensors)
            {
                <li id='@sensor.EncodedId' title='@sensor.Tooltip' data-jstree='{"title" : "@sensor.Title", "icon" : "@sensor.Status", "time" : "@sensor.UpdateTime"}'>
                    <span class="@sensor.StateCssClass">@Html.Raw(sensor.Name.GetShortNodeName())</span>

                    @if (userNotifications.IsSensorIgnored(sensor.Id))
                    {
                        <span>
                            <i id="@(sensor.EncodedId)_ignoreNotifications" class="fa-solid fa-bell-slash fa-xs"></i>
                        </span>
                    }
                    else if (userNotifications.IsSensorEnabled(sensor.Id))
                    {
                        <span>
                            <i id="@(sensor.EncodedId)_notifications" class="fab fa-telegram fa-xs"></i>
                        </span>
                    }
                </li>
            }
        </ul>
    }
     
    @*Touch this span with inline text carefully!*@
    @*Span with class 'nodeSensorsCount-span' is using for removing <li> with 0 visible sensors after refreshing tree (text in this span must be inline)*@
    <span class="nodeSensorsCount-span">@Model.GetSensorsCountString()</span>

    @if (!isEmptyProduct)
    {
        @if (Model.IsAllNotificationsIgnored)
        {
            <span>
                <i id="@(data.EncodedId)_ignoreNotifications" class="fa-solid fa-bell-slash fa-xs"></i>
            </span>
        }
        else if (Model.IsAnyNotificationsEnabled)
        {
            <span>
                <i id="@(data.EncodedId)_notifications" class="fab fa-telegram fa-xs"></i>
                <input id='@(data.EncodedId)_partialNotifications' value='@((!Model.IsAllNotificationsEnabled).ToString())' style='display: none' />
            </span>
        }
            
        @if (data.HasGroupNotifications)
        {
            <span>
                <i class="fa-solid fa-people-group"></i>
            </span>
        }
    }
</li>
