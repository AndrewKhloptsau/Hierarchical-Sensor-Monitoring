@using HSMServer.Constants
@model HSMServer.Model.LoginModel
@{
    ViewData["Title"] = "Login";
}

<script>
    var urlAction = "@Html.Raw(Url.Action(ViewConstants.AuthorizeAction, ViewConstants.StartController))"
    var urlLogged = "@Html.Raw(Url.Action(ViewConstants.IndexAction, ViewConstants.HomeController))"
</script>

<h2>Login</h2>

<div class="login-form-div">
    <form method="post" action="account/authenticate" enctype="application/x-www-form-urlencoded">
        <label>Enter login:</label><br />
        <input name="login" id="loginInput" /><br />
        <label>Enter password:</label><br />
        <input name="password" type="password" id="passwordInput" />

        <input type="submit" id="loginSubmit" value="Enter" />
    </form>
    @*@using (Ajax.BeginForm("Authenticate"))
    {
        <label>Enter login:</label><br />
        <input value="@Model.Login" name="Login" id="loginInput" /><br />
        <label>Enter password:</label><br />
        <input value="@Model.Password" name="Password" type="password" id="passwordInput" />

        <input type="submit" id="loginSubmit" value="Send" />
    }*@
    @*<form>
            <label>Enter login:</label><br />
            <input value="@Model.Login" name="Login" id="loginInput" /><br />
            <label>Enter password:</label><br />
            <input value="@Model.Password" name="Password" type="password" id="passwordInput" />

            <input type="submit" id="loginSubmit" value="Send" />
        </form>

        *@
    <script>
        function data(login, password) {
            this.Login = login;
            this.Password = password;
        }

        async function authorizeAsync() {
            var loginData = new data(document.getElementById("loginInput").value, document.getElementById("passwordInput").value);
            console.log(loginData);
            let response = await fetch(urlAction, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json;charset=utf-8'
                },
                body: JSON.stringify(loginData)
            });
            if (response.ok === true) {
                console.log('logged in successfully');               
                document.cookie = 'auth' + '=' + btoa(document.getElementById("loginInput").value + ":" + document.getElementById("passwordInput").value);
                window.location = urlLogged;
            } else {
                console.log('failed to log in!');
            }
            //$.ajax({
            //    type: "POST",
            //    data: JSON.stringify(loginData),
            //    url: urlAction,               
            //    cache: false,
            //    async: true,
            //    contentType: "application/json",
            //    success: function (request, response) {
            //        $.ajaxSetup({
            //            headers: {
            //                "Authorization": btoa(document.getElementById("loginInput").value + ":" + document.getElementById("passwordInput").value)
            //            }
            //        });
            //        console.log('success section triggered');
            //        window.location.href = urlLogged;
            //    },
            //});
            
        };

        //document.getElementById("loginSubmit").addEventListener("click", e => {
        //    e.preventDefault();
        //    authorizeAsync();
        //});
    </script>
</div>
