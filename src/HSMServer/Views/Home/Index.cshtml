@using HSMServer.Constants
@using HSMServer.HtmlHelpers
@model HSMServer.Model.ViewModel.TreeViewModel

@{
    ViewData["Title"] = "Home Page";
}
<script>
    var urlAction = "@Html.Raw(Url.Action(ViewConstants.UpdateAction, ViewConstants.HomeController))"
</script>

<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/@@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.min.js"></script>

<script src="js/signalr/dist/browser/signalr.min.js"></script>

<form method="post" style="margin: 10px">
    <hr />
</form>

<div class="container">
    <div id="mainContainer" class="row">
        @ViewHelper.CreateTreeWithLists(Model)
    </div>
</div>


<script>
    function tree() {
        $('#jstree').jstree();

        $('#jstree').on('activate_node.jstree', function (e, data) {
            if (data == undefined || data.node == undefined || data.node.id == undefined)
                return;
            //alert('clicked node: ' + data.node.id);

            $('ul[id^="list_"]').css("display", "none"); //start with

            $("#list_" + data.node.id).css("display", "block");
        });
    }

    tree();
</script>

<script>
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/monitoring")
        .build();

    hubConnection.on("SendSensorUpdates", function (newModel) {
        //console.log('Updated items count = ' + data.length);
        console.log('Data:' + newModel);

        if (newModel == undefined) return;

        $.ajax({
            type: "POST",
            data: JSON.stringify(newModel),
            url: urlAction,
            dataType: "html",
            contentType: "application/json",
            cache: false,
            async: true,
            success: function (result) {
                //$("#mainContainer").empty();

                //alert(JSON.stringify(result));

                //$("#mainContainer").append(result);
                //var test = document.getElementById("mainContainer");
                //test.innerHTML = decodeURI(result);

                //tree();
            }
        }).done(function (data) {
            $("#mainContainer").empty();

            alert(data);

            $("#mainContainer").append(data);

            tree();
        });
    });

    hubConnection.start().then(() => {
        console.log(hubConnection.connectionId);
    });
</script>