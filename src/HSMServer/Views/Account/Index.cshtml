@using HSMServer.Constants
@model HSMServer.Model.LoginModel
@{
    ViewData["Title"] = "Login";
}

<script>

    var urlAction = "@Html.Raw(Url.Action(ViewConstants.AuthenticateAction, ViewConstants.AccountController))";
    var urlLogged = "@Html.Raw(Url.Action(ViewConstants.IndexAction, ViewConstants.HomeController))";
</script>
@*<style>
    .login-form-div {

    }

    .class login-form-text-input {
        width: 100%;
        border: 2px solid gray;
        border-radius: 4px;
    }
    .class login-form-text-input {
        border: 4px solid #000000;
    }

    #passwordInput {
        margin: auto auto 10px auto;
    }
</style>*@

<h4>Login</h4>

<div class="login-form-div">
    <form method="post" action="Authenticate" enctype="application/x-www-form-urlencoded" >
        <div class="mb-1">
            @*<label asp-for="Login" class="form-label">Enter login:</label><br/>*@
            <input class="form-control" placeholder="Login" name="login" id="loginInput" value="@Model.Login" type="text" /><br/>
        </div>
        <div class="mb-3">
            @*<label asp-for="Password" class="form-label">Enter password:</label><br/>*@
            <input class="form-control" placeholder="Password" name="password" type="password" id="passwordInput" value="@Model.Password" />
        </div>
        <div class="mb-3 form-check">
            <input type="checkbox" class="form-check-input" id="keepLoggedInInput" name="keepLoggedIn" onchange="if(this.checked) this.value='true'; else this.value='false';" />
            <label class="form-check-label" for="keepLoggedInInput">Keep logged in</label>
        </div>

        <button type="submit" id="loginSubmit" class="btn btn-secondary">Submit <i class="fas fa-sign-in-alt"></i></button>
    </form>
    @if (TempData["ErrorMessage"] != null)
    {
        <span style="color: red;font-size: large;font-weight:normal">@TempData["ErrorMessage"].ToString()</span>
    }
</div>
