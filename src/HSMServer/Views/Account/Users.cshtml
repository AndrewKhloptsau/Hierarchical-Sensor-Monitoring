@using HSMServer.Model.ViewModel
@using HSMServer.Constants
@using HSMServer.HtmlHelpers
@model List<UserViewModel>

@{ ViewData["Title"] = "Users"; }

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js"></script>

<div class="container row justify-content-center">
    @if (TempData[TextConstants.TempDataErrorText] != null)
    {
        <span style="color: red;font-size: large;font-weight:normal">@TempData[TextConstants.TempDataErrorText].ToString()</span>
    }

    @ViewHelper.CreateUserList(Model)
    
    @*<button type="submit" id="user_changes_submit">Save changes</button>*@
</div>

<script>
    function createData(userName, password, role, products) {
        this.userName = userName;
        this.password = password;
        this.role = role;
        this.products = products;
    }

    //$('[id=user_changes_submit]').on("click",
    //    function() {

    //    }
    //);

    //$('[id=createButton]').on("click",
    //    function () {
    //        let loginInput = document.getElementById('createName');
    //        let passwordInput = document.getElementById('createPassword');
    //        let roleSelect = document.getElementById('createRoleSelect');
    //        let productsSelect = document.getElementById('productsSelectNewUser');

    //        let selectedProducts = [...productsSelect.options]
    //            .filter(option => option.selected)
    //            .map(option => option.value);

    //        alert(selectedProducts);
    //    }
    //);
</script>