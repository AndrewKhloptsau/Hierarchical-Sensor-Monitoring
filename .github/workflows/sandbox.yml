name: Sandbox build
on:
  push:
    branches:
      - test_github_actions

  workflow_dispatch:
    inputs:
      isRelease:
        description: 'Release'
        type: boolean
        required: true
        default: false
env:
  OUTPUT_FOLDER: ${{ github.workspace }}/BuildOutput

jobs:
  build:
    runs-on: windows-latest
    outputs:
      VERSION: ${{ steps.save-version.outputs.version }}
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Build HSMServer
      run: dotnet build src/server/HSMServer/HSMServer.csproj -c Release -o ${{ env.OUTPUT_FOLDER }}

    - id: save-version
      name: Try to get server version
      run: echo "::set-output name=version::$((Get-Item ${{ env.OUTPUT_FOLDER }}/HSMServer.exe).VersionInfo.ProductVersion)"

    - name: Print server version
      run: echo "Project version is ${{ steps.save-version.outputs.version }}"


  create-artifact:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      ARTIFACT_NAME: ${{ steps.build-artifact-name.outputs.name}}
    steps:
      - uses: actions/checkout@v3

      - id: build-artifact-name
        name: Build artifact name
        run: echo "::set-output name=name::HSMServer v${{ needs.build.outputs.VERSION }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.OUTPUT_FOLDER }}
          name: ${{ steps.build-artifact-name.output.name }}


  create-tag:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      BUILD_TAG: ${{ steps.save-tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v3

      - id: save-tag
        name: Create tag
        run: echo "::set-output name=tag::server-v${{ needs.build.outputs.VERSION }}"

      - name: Push tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ steps.save-tag.outputs.tag }}
          message: "Test message"
          force_push_tag: true


  create-release:
    runs-on: ubuntu-latest
    needs: [create-artifact, create-tag]
    steps:
      - uses: actions/checkout@v3

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ needs.create-artifact.outputs.ARTIFACT_NAME }}
          tag: ${{ needs.create-tag.outputs.BUILD_TAG }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: ${{ env.OUTPUT_FOLDER }}
          prerelease: false
          allowUpdates: true